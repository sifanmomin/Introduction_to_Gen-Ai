# LangChain

LangChain is a powerful framework for building applications with language models. This repository provides examples and tutorials on how to use LangChain for various tasks.

## Table of Contents
- [Fundamental](#fundamental)
- [RAG (Retrieval-Augmented Generation)](#rag-retrieval-augmented-generation)
- [Agent](#agent)

## Fundamental
- **What is LangChain**: Learn the basics of LangChain and how to get started.
- **Components**: Understand the different components of LangChain.
- **Models**: Learn about the models used in LangChain.
- **Prompts**: Understand how to create and use prompts.
- **Parsing Output**: Techniques for parsing the output from language models.
- **Chains**: Learn how to create and use chains in LangChain.
- **Memory**: Understand how to manage memory in LangChain.

## RAG (Retrieval-Augmented Generation)
- **Overview of RAG**: Introduction to the concept of retrieval-augmented generation.
- **Setting Up RAG**: Step-by-step guide on setting up RAG with LangChain.
- **Query Embedding**: Learn how to embed queries for retrieval tasks.
- **Document Retrieval**: Techniques for retrieving relevant documents based on query embeddings.
- **Generating Responses**: Use retrieved documents to generate responses with language models.
- **Document Loader**: Learn how to load documents for RAG.
- **Text Splitter**: Techniques for splitting text into manageable chunks.
- **Embedding**: Understand how to embed text for retrieval.
- **Vector Store**: Learn how to store and manage vectors.
- **Retriever**: Techniques for retrieving relevant vectors.
- **Building a RAG Application**: Step-by-step guide on building a RAG application.

## Agent
- **Introduction**: Understand the role of agents in LangChain.
- **Tool and Toolkit**: Learn about the tools and toolkits available for agents.
- **Building an Agent**: Step-by-step guide on building agents with LangChain.                                
